import JSZip from 'jszip';

export interface FileToZip {
  name: string;
  content: string;
}

export async function createKnowledgeGraphZip(
  files: FileToZip[],
  metadata?: {
    totalConcepts: number;
    totalLinks: number;
    processingTime: number;
  }
): Promise<Buffer> {
  const zip = new JSZip();

  // Add a README to the ZIP
  const readmeContent = `# Knowledge Graph Package

Generated: ${new Date().toISOString()}
${metadata ? `
## Statistics

- Total Concepts: ${metadata.totalConcepts}
- Total Wikilinks: ${metadata.totalLinks}
- Processing Time: ${(metadata.processingTime / 1000).toFixed(2)}s
` : ''}

## How to Use

### Option 1: Obsidian / Logseq
1. Create a new vault/graph
2. Copy all .md files into your vault
3. Open 00-INDEX.md to explore concepts

### Option 2: Claude Desktop Skills
1. Go to Settings → Developer → Edit Skills
2. Create a new folder for this knowledge graph
3. Copy all .md files into the folder
4. Skills will be available in Claude Desktop

### Navigation Tips

- Click on [[wikilinks]] to jump between related concepts
- Use 00-INDEX.md as your starting point
- Search for concepts to see all connections

## Structure

- \`00-INDEX.md\` - Master index of all concepts
- Other .md files - Your original content with wikilinks added

---
*Generated by Knowledge Graph Generator*
`;

  zip.file('README.md', readmeContent);

  // Add all the markdown files
  for (const file of files) {
    zip.file(file.name, file.content);
  }

  // Generate the ZIP as a Buffer
  const zipBuffer = await zip.generateAsync({
    type: 'nodebuffer',
    compression: 'DEFLATE',
    compressionOptions: { level: 9 }
  });

  return zipBuffer;
}

// Helper to sanitize filenames
export function sanitizeFilename(filename: string): string {
  return filename
    .replace(/[^a-z0-9.-]/gi, '-')
    .replace(/-+/g, '-')
    .toLowerCase();
}

// Helper to ensure .md extension
export function ensureMarkdownExtension(filename: string): string {
  if (!filename.endsWith('.md')) {
    // Remove existing extension if present
    const withoutExt = filename.replace(/\.[^/.]+$/, '');
    return `${withoutExt}.md`;
  }
  return filename;
}
